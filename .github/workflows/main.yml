# This is a simple workflow that runs the publisher and copies the output to https://<owner>.github.io/<repo>/index.html
# Based on the instructions from Elliot Silver, available from: https://www.argentixinfo.com/archives/156
# Change log:
# 2021-06-18: (JCT): publish default branches to / , other branches branches/<branch>
# 2021-11-26: (JCT): Reusable workflow
# 2022-01-28: (JCT): add auto-create gh-pages if it doesn't exist
# 2023-01-22: (JCT): use checkout action v3, and JamesIves/github-pages-deploy-action@v4


# Make sure your repo has a branch called gh-pages

name: CI

# Controls when the action will run. 
on: 
  workflow_call: # Reusable by other workflows
  # Triggers the workflow on push or pull request events for any branch
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
   
      - name: Get branch name
        run: echo ${GITHUB_REF##*/}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Update the image to the latest publisher
        uses: docker://hl7fhir/ig-publisher-base:latest
        with:
          # Get the latest publisher - don't run the batch script but run the line directly
          args: curl -L https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar -o ./input-cache/publisher.jar --create-dirs

      - name: Run the IG publisher
        uses: docker://hl7fhir/ig-publisher-base:latest
        with:
          # Run the publisher - don't run the batch script but run the line directly
          args: java -jar ./input-cache/publisher.jar publisher -ig . -auto-ig-build -repo https://github.com/${{github.repository}}

      - name: Commit QA results
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout -b qa-results
          git add output/qa.json -f
          git commit -m "Update QA results"
          git push origin qa-results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Download and update badges.md
        run: |
          wget -O badges.md https://raw.githubusercontent.com/costateixeira/ig-badges/main/badges.md
          sed -i -e "s|__GH_OWNER__|${GITHUB_REPOSITORY_OWNER}|g" badges.md
          sed -i -e "s|__GH_BRANCH__|${GITHUB_REF##*/}|g" badges.md
          sed -i -e "s|__GH_REPO__|${GITHUB_REPOSITORY##*/}|g" badges.md
          ERRS=$(jq '.errs' output/qa.json)
          WARNINGS=$(jq '.warnings' output/qa.json)
          sed -i -e "s|__ERRS__|$ERRS|g" badges.md
          sed -i -e "s|__WARNINGS__|$WARNINGS|g" badges.md

      - name: Replace badges in README.md
        run: |
          awk 'NR==FNR{new = new $0 ORS; next} /<!--\/badges-->/{f=0} !f{print} /<!--badges-->/{printf "%s",new; f=1}' badges.md README.md > README_NEW.md && mv README_NEW.md README.md
          cat README.md

      - name: Stage and commit README.md
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update README.md with new badges"
          git push





      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v4.3

      - name: Deploy candidate
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        if: ${{ steps.branch-name.outputs.is_default }} == 'false'
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: ./output # The folder the action should deploy.
          commit-message: Deploy candidate branch
          target-folder: branches/${{ steps.branch-name.outputs.current_branch }}
          clean: false 

      - name: Deploy main
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        if: ${{ steps.branch-name.outputs.is_default }} == 'true'
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: ./output # The folder the action should deploy.
          commit-message: Deploy main branch
          clean-exclude: branches
